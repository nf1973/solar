import {
  ResponsiveContainer,
  BarChart,
  CartesianGrid,
  XAxis,
  YAxis,
  Tooltip,
  Legend,
  Bar,
  AreaChart,
  Area,
  LineChart,
} from "recharts";
import { Card, CardHeader, CardContent } from "./ui/card";

const DailySummaryChart = ({
  allData,
  selectedMonthYear,
  setSelectedMonthYear,
}) => {
  const kWhFormatter = (num) => {
    return (num / 1000).toFixed(1);
  };

  // Format date for axis label
  const formatDateforAxisLabel = (date) => {
    const day = date.slice(6, 8);
    return day;
  };

  function formatSelectedMonthForCardTitle(dateString) {
    const year = dateString.slice(0, 4);
    const month = Number(dateString.slice(4)) - 1; // Subtracting 1 to convert to zero-based month
    const date = new Date(Date.UTC(year, month, 1));
    const options = { month: "long" };
    const monthName = date.toLocaleString(undefined, options);
    return `${monthName} ${year}`;
  }
  // Transform the data to match the expected format for the chart
  const transformedData = allData
    .filter((item) => item.date.startsWith(selectedMonthYear))
    .map((item) => ({
      "Total Energy Generated": kWhFormatter(item.energyGenerated),
      date: formatDateforAxisLabel(item.date),
    }));

  // Find the highest value for Total Energy Generated
  const energyValues = transformedData.map((item) => {
    const value = parseFloat(item["Total Energy Generated"]) * 1.05;
    return Math.ceil(value / 2) * 2;
  });
  const yAxisLimit = Math.max(...energyValues);

  return (
    <Card className="w-full">
      <CardHeader>
        <h3 className="text-lg font-bold text-[#30AEBE]">
          Energy Generated by Day for{" "}
          {formatSelectedMonthForCardTitle(selectedMonthYear)}
        </h3>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={400}>
          <BarChart data={transformedData}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="date" />
            <YAxis
              type="number"
              domain={[0, yAxisLimit]}
              label={{
                value: "kWh",
                position: "insideLeft",
                angle: "-90",
                offset: "0",
              }}
            />
            <Tooltip />
            <Legend />
            <Bar dataKey="Total Energy Generated" fill="#30AEBE" />
          </BarChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
};

export default DailySummaryChart;
